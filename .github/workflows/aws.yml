# This workflow will build and push a new container image to Amazon ECR
#
# To use this workflow, you will need to complete the following set-up steps:
#
#    Create an ECR repository to store your images.
#    For example: `aws ecr create-repository --repository-name my-app-repo --region ap-south-1`.
#    Replace the value of `ECR_REPOSITORY` in the workflow below with your repository's name.
#    Replace the value of `aws-region` in the workflow below with your repository's region.

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

name: python hostname Project `my-app-repo` CI on ECR

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Docker build and push to ECR
      uses: kciter/aws-ecr-action@master
      with:
        access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        account_id: ${{ secrets.AWS_ACCOUNT_ID }}
        repo: my-node
        region: ${{ secretes.AWS_REGION }}
        tags: ${{ github.sha }}
        create_repo: true

    #- name: Configure AWS credentials
      #uses: aws-actions/configure-aws-credentials@v1
      #with:
        #aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #aws-region: ap-south-1  # give your aws_region

    #- name: Login to Amazon ECR
      #id: login-ecr
      #uses: aws-actions/amazon-ecr-login@v1

    #- name: Build, tag, and push image to Amazon ECR
      #id: build-image
      #env:
        #ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        #ECR_REPOSITORY: my-app-repo  # give your aws ECR repository name
        #IMAGE_TAG: latest
      #run: |
        # Build a docker container and push it to ECR 
        #docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        #echo "Pushing image to ECR..."
        #docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        #echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

        




